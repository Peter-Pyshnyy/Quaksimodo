~ tutorial_test

Euler: Addition: 1 + 2 = 3
Euler: Was ist {{tutorial_x}} + {{tutorial_y}}?
- {{tutorial_x * 2}}
	Euler: Falsch!
	Euler: Versuche es nochmal!
	=> tutorial_start
- {{tutorial_x + tutorial_y}}
	Euler: Korrekt!
- {{tutorial_y * 2}}
	Euler: Falsch!
	Euler: Versuche es nochmal! 
	=> tutorial_start
- Bitte erkläre nochmal! => tutorial_start
- Skip

=> END

~ tutorial_start
Euler: Was soll ich heute erklären?
Storch: The FitnessGram Pacer Test is a multistage aerobic capacity test that progressively gets more difficult as it continues. The 20 meter pacer test will begin in 30 seconds. Line up at the start. The running speed starts slowly but gets faster each minute after you hear this signal bodeboop. A sing lap should be completed every time you hear this sound. ding Remember to run in a straight line and run as long as possible. The second time you fail to complete a lap before the sound, your test is over. The test will begin on the word start. On your mark. Get ready!… Start. ding﻿ 
Igel: The FitnessGram Pacer Test is a multistage aerobic capacity test that progressively gets more difficult as it continues. The 20 meter pacer test will begin in 30 seconds. Line up at the start. The running speed starts slowly but gets faster each minute after you hear this signal bodeboop. A sing lap should be completed every time you hear this sound. ding Remember to run in a straight line and run as long as possible. The second time you fail to complete a lap before the sound, your test is over. The test will begin on the word start. On your mark. Get ready!… Start. ding﻿ 
Bieber: The FitnessGram Pacer Test is a multistage aerobic capacity test that progressively gets more difficult as it continues. The 20 meter pacer test will begin in 30 seconds. Line up at the start. The running speed starts slowly but gets faster each minute after you hear this signal bodeboop. A sing lap should be completed every time you hear this sound. ding Remember to run in a straight line and run as long as possible. The second time you fail to complete a lap before the sound, your test is over. The test will begin on the word start. On your mark. Get ready!… Start. ding﻿ 

- Nullstellen => tutorial_nullstellen
- Ableitungen (wahrscheinlich nicht implementiert) => tutorial_ableitung
- Quadratische Funktionen => tutorial_quadratischeFunktionen
- Nichts => END
=> END


~ tutorial_nullstellen

Euler: Nullstellen errechnen ist ganz einfach!
Euler: Du musst nur die Funktion gegen 0 setzen und gegen x rechnen.
Euler: Zum Beispiel: f(x)= 2x+4 -> 0 = 2x+4 |-4 -> -4 = 2x |:2 -> -2 = x
Euler: Bei komplizierteren Funktionen musst du einfach in die pq-Formel umstellen.
Euler: Was ist die pq-Formel? Ganz einfach!
Euler: x = -p/2 +/- √((p/2)²-q)
Euler: Sagen wir, deine Funktion ist x²-6x+5. Dann wäre -6 dein p und 5 dein q
Euler: Also wäre dein x = 6/2 +/- √((-6/2)²-5), oder vereinfacht: 3 +/- √4
Euler: Du siehst, dass zwei Lösungen herauskommen: 3+2 und 3-2
Euler: Die Funktion schneidet die x-Achse also an x=1 und x=5
Euler: Sollte unter der Wurzel 0 herauskommen gäbe es nur eine Nullstelle. 
Euler: Pass auf, dass du immer alle Nullstellen angibst!

=> END

~ tutorial_quadratischeFunktionen

Euler: Es gibt verschiedene Arten von quadratischen Funktionen, die nach der Form a*x²+b*x+c verlaufen!
Euler: a*x²+b*x+c\nWenn a größer 0 ist, dann ist die Parabel nach oben geöffnet.
Euler: a*x²+b*x+c\nSollte a kleiner als 0 sein, dann ist die Parabel nach unten geöffnet.
Euler: a*x²+b*x+c\nDesto größer a ist, desto näher wird die Parabel an die x-Achse gestaucht.
Euler: a*x²+b*x+c\nDesto kleiner a ist, desto näher wird die Parabel an die y-Achse gestreckt.
Euler: a*x²+b*x+c\nc verschiebt den Graphen entlang der y-Achse.
Euler: (x+d)²+b*x+c\nd hingegen verschiebt den Graphen entlang der x-Achse.
Euler: Euler: a*x²+b*x+c\nb hingegen verschiebt entgegengesetzt essenziell, wo der Graph x=0 schneidet.

=> END

~ tutorial_ableitung

Euler: Eine Ableitung gibt die Steigung der Funktion an einer jeweiligen Stelle an.
Euler: Um eine Ableitung zu finden muss essenziell die Funktion auf das x reduziert werden.
Euler: Zum Beispiel: Die lineare Funktion f(x)= 5x+3 hat überall den Anstieg 5.
Euler: Alle Zahlen ohne x werden weggeschmissen und nur das die 5 bleibt übrig. Die Ableitung f'(x) ist 5.
Euler: Bei Potenzen ist es etwas anders. Die Potenz wird um 1 subtrahiert und die vorherige Potenz wird zum x multipliziert
Euler: x² wird zu 2x. x³ wird zu 3x². 3x² wird zu 6x.


=> END




~ storch_battle_start

% Storch: Endlich was zu essen!
% Storch: Bringen wir's hinter uns. Ich hab dann noch ein Baby zu liefern.
% Storch: Froschschenkel! Die mag ich am Liebsten!
% Storch: Ab in den Horst mit dir!
% Storch: Wenn ich mit dir fertig bin, wirst DU die Nullstelle sein.
% Storch: Ich zieh gleich deine Wurzeln!

=> END

~ storch_battle_victory

% Storch: Nächstes mal krieg ich dich!
% Storch: Ughh, ich glaube ich hab noch einen anderen Frosch im Hals.
% Storch: Ach halt doch den Schnabel!
% Storch: So lecker siehst du eh nicht aus!
% Storch: Jetzt hab ich keinen Appetit mehr...
% Storch: Taschenrechner ist Schummeln!

=> END

~ storch_battle_failure

% Storch: Das wird lecker.
% Storch: Ich bereite schonmal den Herd vor...
% Storch: Damit wäre das Abendessen schonmal gesichert.
% Storch: Ich hoffe ich kann das Baby noch rechtzeitig abliefern.
% Storch: So viel kann ich garnicht essen.

=> END

~ igel_battle_start

% Igel: Komm her, ich pieks dich!!!
% Igel: Ich zerhack dich!!!
% Igel: Ich hoffe, du magst Nadeln!
% Igel: Hau lieber ab! Ich hab eine Axt gefunden und will sie ausprobieren!
% Igel: Das wird dir mehr weh tun als mir!

=> END

~ igel_battle_victory

% Igel: Autsch...
% Igel: Hast du dich wenigstens gestochen?
% Igel: Uiuiuiui, das wars...
% Igel: Hey warte, du sollst verlieren!
% Igel: Das war unfair!

=> END

~ igel_battle_failure

% Igel: Hack hack hack hahahaha
% Igel: Ich weiß genau, welche Soße ich nehmen werde!
% Igel: Wie genau bereitet man Frosch überhaupt zu...?
% Igel: Hat sich jemand gestochen?
% Igel: Das passiert, wenn man einen Igel anstachelt.

=> END

~ bieber_battle_start

% Bieber: Holz... Holz... Holz... Frosch... Frosch!?
% Bieber: Ach verdammt, ich hatte eigentlich schon was vor. Aber für dich wird die Zeit noch reichen
% Bieber: AH! EIN FROSCH! Ich mag Frösche nicht!
% Bieber: AH! EIN FROSCH! Ich liebe Frösche!
% Bieber: Ah, ein Frosch. Ich habe keine starken Gefühle gegenüber Fröschen.
% Bieber: Bleib ja weg von meinem Damm!

=> END

~ bieber_battle_victory

% Bieber: Ach verdammt...
% Bieber: Du blöde Nervennage!
% Bieber: AH! Mein ganzer Damm fällt auseinander!
% Bieber: Ich glaube, das reicht erstmal für mich.
% Bieber: Eh, egal. Ich geh weiter Stöcke sammeln.
% Bieber: Ich mag dich nicht.

=> END

~ bieber_battle_failure

% Bieber: Bleh!
% Bieber: Plitsch platsch und du bist Matsch!
% Bieber: Oh warte, alles okay? Du siehst garnicht gut aus.
% Bieber: Endlich! Ich dachte schon, wir werden hier garnicht fertig.
% Bieber: Nein nein, so rechnet man das nicht.

=> END